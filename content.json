{"pages":[{"title":"","text":"NhlEir5LAV","link":"/baidu_verify_NhlEir5LAV.html"},{"title":"","text":"zQef3H7nga","link":"/baidu_verify_zQef3H7nga.html"},{"title":"","text":"google-site-verification: googlead7e415d5708bb6e.html","link":"/googlead7e415d5708bb6e.html"},{"title":"Gallery / 图库","text":"","link":"/gallery/index.html"},{"title":"","text":"[{\"name\":\"My Site\",\"icon\":\"/asset/img/author.medium.png\",\"link\":\"/\"},{\"name\":\"Resume\",\"icon\":\"/extension/resume/icon.png\",\"link\":\"/extension/resume/english/\"},{\"name\":\"简历\",\"icon\":\"/extension/resume/icon.reverse.png\",\"link\":\"/extension/resume/chinese/\"},{\"name\":\"Cover Letter\",\"icon\":\"/extension/letter/icon.png\",\"link\":\"/extension/letter/english/\"},{\"name\":\"求职信\",\"icon\":\"/extension/letter/icon.reverse.png\",\"link\":\"/extension/letter/chinese/\"},{\"name\":\"Azure\",\"icon\":\"https://azureforeducation.microsoft.com/Library/Main/Images/favicon.ico\",\"link\":\"https://azureforeducation.microsoft.com/devtools\"},{\"name\":\"WebSafeColors\",\"icon\":\"https://cdn.jsdelivr.net/npm/@bootcss/www.bootcss.com@0.0.11/dist/ico/apple-touch-icon-precomposed.png\",\"link\":\"https://www.bootcss.com/p/websafecolors/\"},{\"name\":\"HTML Entities\",\"icon\":\"https://www.w3schools.com/favicon.ico\",\"link\":\"https://www.w3schools.com/html/html_entities.asp\"},{\"name\":\"Driving Test\",\"icon\":\"https://www.drivingtest.ca/wp-content/uploads/apple-icon-180x180.png\",\"link\":\"https://www.drivingtest.ca/ontario-g1-driving-test/\"},{\"name\":\"Altima Help\",\"icon\":\"https://altimatel.com/wp-content/uploads/2019/11/apple-touch-icon.png\",\"link\":\"https://altimatel.com/access-and-customize-your-wireless-home-network/\"},{\"name\":\"Test\",\"icon\":\"/extension/test/icon.png\",\"link\":\"/extension/test/\"}]","link":"/extension/content.json"},{"title":"Code Library / 代码库","text":"","link":"/library/index.html"},{"title":"Cover Letter Tips / 求职信小贴士","text":"Image source from: unsplash.com Reference: https://www.zhihu.com/question/20372030/answer/62881601 开门见山——说说你是谁，你想干啥累 合理展现——说说你的魅力，为啥子能干这个活 情感剧场——说说你为啥选俺们介个公司，没选隔壁老王 深情结尾——感谢党，感谢国家，感谢人民…… Reference: https://zhuanlan.zhihu.com/p/105607681 A部分用于简要自我介绍，并表明求职意向；B部分用来简要介绍自己的教育背景；C部分用来详细具体地叙述和职位要求相关的事例；D部分用于说明应聘理由或者陈述一些与职位关联度不高但可以略微加分的内容；E部分为结尾，表达建立进一步联系的期望，并向雇主推荐自己的简历。 https://github.com/resumejob/awesome-resume#cover-letter https://zhuanlan.zhihu.com/p/29275729","link":"/letter/index.html"},{"title":"","text":"[{\"cover\":\"/images/avater.png\",\"date\":\"2019/02 - LATEST\",\"title\":\"Ai码\",\"type\":null,\"author\":\"wanik\",\"source\":\"https://www.aicode.top\",\"progress\":\"Latest\",\"summary\":\"AI码 | Wanik666\"},{\"cover\":\"/extension/letter/icon.png\",\"date\":\"2020/03 - 2020/03\",\"title\":\"Cover Letter Template/Generator\",\"type\":null,\"author\":\"jinyaoMa\",\"source\":\"https://ma-jinyao.cn/extension/letter/english/\",\"progress\":\"Latest\",\"summary\":\"Cover Letter\"},{\"cover\":\"/extension/resume/icon.png\",\"date\":\"2020/02 - 2020/03\",\"title\":\"Resume Template/Generator\",\"type\":null,\"author\":\"jinyaoMa\",\"source\":\"https://ma-jinyao.cn/extension/resume/english/\",\"progress\":\"Latest\",\"summary\":\"My Resume\"},{\"cover\":\"/extension/test/icon.png\",\"date\":\"20??/?? - ????/??\",\"title\":\"Test\",\"type\":null,\"author\":\"jinyaoMa\",\"source\":\"https://ma-jinyao.cn/extension/test/\",\"progress\":\"22%\",\"summary\":\"2048 越改越多 bug，好久之前打的码了，音乐播放器也是很乱。这两东西基本上没啥用了，代码也没有复用价值，2048 的算法也就看看这样子\"},{\"cover\":null,\"date\":null,\"title\":null,\"type\":null,\"author\":null,\"source\":null,\"progress\":null,\"summary\":null}]","link":"/records/content.json"},{"title":"Resume Tips / 简历小贴士","text":"Image source from: unsplash.com My Resume / 我的简历 English Chinese Reference: https://github.com/resumejob/awesome-resume https://zhuanlan.zhihu.com/p/106632768 https://zety.com/blog/web-developer-resume Information Covered in Resume / 简历需要包含的信息 一份简历总体可以分为 6个 模块：基本信息，个人简介，技能列表，工作经历，项目经验，教育情况，其他。这个顺序能让 HR 从浅到深快速了解求职者的优势与技能。学校信息如果是重点学校或者萌新工程师，可以提前并放在基本信息之后。 Programmer Resume Tips / 程序员简历小技巧 English Digitizing Case-flow Formalizing 中文 数字化 案例化 正式化 Digitizing / 数字化 数据 分析 结果 Case-flow / 案例化 扩展 流程 关键字 Formalizing / 正式化 省略主语/第三人称 简约 排版 Write a project experience / 写一个项目经验 What’s the problem / 什么问题 Tools used / 使用的工具 How’s the result / 结果怎样","link":"/resume/index.html"},{"title":"springboot","text":"","link":"/springboot/index.html"},{"title":"Records / 记录","text":"","link":"/records/index.html"},{"title":"关于我","text":"开始结束","link":"/about/index.html"},{"title":"","text":"/** * height: 24 + 40 * 4 + 24 = 208 * width: 40 * 4 = 160 */ (function (window, document) { var _2048 = function (parent) { var outer = this.Component._dom('div'); var topView = this.Component._dom('div'); var gridView = this.Component._dom('div'); var bottomView = this.Component._dom('div'); var closeButton = this.Component._dom('div'); var grids = []; for (var i = 0; i < 16; i++) { var grid = this.Component.Grid(); grids.push(grid); gridView.appendChild(grid); } outer.appendChild(topView); outer.appendChild(gridView); outer.appendChild(bottomView); outer.appendChild(closeButton); parent.appendChild(outer); // ... topView.style.cssText = \"\\ height: 24px;\\ width: 160px;\\ font-size: 16px;\\ padding: 0 4px;\\ user-select: none;\\ color: goldenrod;\\ \"; gridView.style.cssText = \"\\ height: 160px;\\ width: 160px;\\ display: grid;\\ grid-template-columns: 40px 40px 40px 40px;\\ user-select: none;\\ \"; bottomView.style.cssText = \"\\ height: 16px;\\ width: 160px;\\ color: lightgrey;\\ text-align: center;\\ font-size: 16px;\\ user-select: none;\\ padding: 4px 0;\\ \"; closeButton.style.cssText = \"\\ height: 16px;\\ width: 16px;\\ font-size: 16px;\\ line-height: 100%;\\ position: absolute;\\ top: 0;\\ right: 0;\\ user-select: none;\\ padding: 6px;\\ cursor: pointer;\\ \"; outer.style.cssText = \"\\ height: 208px;\\ width: 160px;\\ position: fixed;\\ top: calc(50% - 104px);\\ left: calc(50% - 80px);\\ background-color: aliceblue;\\ padding: 4px;\\ border-radius: 8px;\\ box-shadow: 0 0 12px 4px;\\ display: none;\\ \"; bottomView.innerHTML = \"Controls: &uarr; &darr; &larr; &rarr;\"; closeButton.innerHTML = \"⛌\"; // Initialize var _self = this; var isGameOver = false; var points = 0; var map = [ [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0] ]; var updatePointsLabel = function (points) { topView.innerText = 'Points: ' + points; }; var updatePanel = function () { var index = 0; for (var i = 0; i < 4; i++) { for (var j = 0; j < 4; j++) { grids[index++].setGrid(map[i][j]); } } }; var resetGame = function () { map = [ [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0], [0, 0, 0, 0] ]; points = 0; points += _self.Function.generateNewGrid(map); isGameOver = false; topView.style.color = 'goldenrod'; updatePointsLabel(points); updatePanel(); }; points += this.Function.generateNewGrid(map); // never gameover/return 0 during initializing updatePointsLabel(points); updatePanel(); document.body.onkeydown = function (e) { if (outer.style.display != 'none' && isGameOver == false) { e.preventDefault(); var oldMap = _self.Function.copyMap(map); if (e.keyCode == 39) { // arrow right _self.Function.adjustRight(map); points += _self.Function.doRight(map); _self.Function.adjustRight(map); } else if (e.keyCode == 37) { // arrow left _self.Function.adjustLeft(map); points += _self.Function.doLeft(map); _self.Function.adjustLeft(map); } else if (e.keyCode == 38) { // arrow up _self.Function.adjustUp(map); points += _self.Function.doUp(map); _self.Function.adjustUp(map); } else if (e.keyCode == 40) { // arrow down _self.Function.adjustDown(map); points += _self.Function.doDown(map); _self.Function.adjustDown(map); } var movePoint = _self.Function.generateNewGrid(map); if (_self.Function.isDifferent(oldMap, map)) { // if it's a valid move if (movePoint != 0 && movePoint != -1 && movePoint != -2) { // if not gameover/2048get AND has new grid generated points += movePoint; updatePointsLabel(points); updatePanel(); } } else { if (movePoint == -2) { isGameOver = true; topView.innerText = 'Win: ' + points; topView.style.color = 'green'; } else if (movePoint == 0) { isGameOver = true; topView.innerText = 'Lost: ' + points; topView.style.color = 'red'; } } } }; closeButton.onclick = function () { outer.style.display = 'none'; resetGame(); }; outer.show = function () { this.style.display = 'block'; }; return outer; }; _2048.prototype = { constructor: _2048, Function: { isDifferent: function (oldMap, newMap) { for (var i = 0; i < 4; i++) { for (var j = 0; j < 4; j++) { if (oldMap[i][j] != newMap[i][j]) { return true; } } } return false; }, copyMap: function (map) { var newMap = [[], [], [], []]; for (var i = 0; i < 4; i++) { for (var j = 0; j < 4; j++) { newMap[i][j] = map[i][j]; } } return newMap; }, nextNumber: function () { return Math.random() > 0.7 ? 4 : 2; }, countEmptyPosition: function (map) { var counter = 0; for (var i = 0; i < 4; i++) { for (var j = 0; j < 4; j++) { if (map[i][j] == 0) { counter += 1; } } } return counter; }, has2048: function (map) { for (var i = 0; i < 4; i++) { for (var j = 0; j < 4; j++) { if (map[i][j] == 2048) { return true; } } } return false; }, checkGameOver: function (map) { if (this.has2048(map)) { return -2; } var numOfEmptyPosition = this.countEmptyPosition(map); if (numOfEmptyPosition > 0) { return this.nextPosition(numOfEmptyPosition); } else { for (var i = 0; i < 3; i++) { for (var j = 0; j < 3; j++) { if (map[i][j] == map[i][j + 1]) { return -1; } if (map[i][j] == map[i + 1][j]) { return -1; } } } if (map[3][3] == map[3][2] || map[3][3] == map[2][3]) { return -1; } } return 0; }, nextPosition: function (numOfEmptyPosition) { return Math.floor(Math.random() * numOfEmptyPosition + 1); }, generateNewGrid: function (map) { var point = 0; var temp = this.checkGameOver(map); if (temp == 0) { console.log('gameover'); point = temp; } else if (temp == -1) { console.log('no next number'); point = temp; } else if (temp == -2) { console.log('2048 get'); point = temp; } else { var counter = 0; for (var i = 0; i < 4; i++) { for (var j = 0; j < 4; j++) { if (map[i][j] == 0) { counter += 1; if (counter == temp) { point = this.nextNumber(); map[i][j] = point; } } } } } return point; // 0 = gameover, -1 = no need to generate new grid, 2 or 4 = nextNumber(), -2 = 2048 get }, adjustRight: function (map) { for (var i = 0; i < 4; i++) { for (var j = 3; j > 0; j--) { var k = 1; while (k < 4 && j - k >= 0 && map[i][j] == 0) { map[i][j] = map[i][j - k]; map[i][j - k] = 0; k += 1; } } } }, doRight: function (map) { var point = 0; for (var i = 0; i < 4; i++) { for (var j = 3; j > 0; j--) { if (map[i][j] == map[i][j - 1]) { map[i][j] = map[i][j] + map[i][j - 1]; point += map[i][j - 1]; map[i][j - 1] = 0; } } } return point; }, adjustLeft: function (map) { for (var i = 0; i < 4; i++) { for (var j = 0; j < 3; j++) { var k = 1; while (k < 4 && j + k","link":"/code/yao2048.js"},{"title":"","text":"function getDateFormat(lang) { if (typeof lang === 'string') { if (lang.startsWith('zh')) { return 'YYYY年MM月DD日 ddd A h:mm:ss'; } else { return 'dddd, Do MMM. YYYY, h:mm:ss A'; } } return ''; } function fillBrand(data) { var brand = document.querySelector('#brand'); var name = document.querySelector('#name'); var position = document.querySelector('#position'); var date = document.querySelector('#date'); var email = document.querySelector('#email'); var phone = document.querySelector('#phone'); var address = document.querySelector('#address'); var www = document.querySelector('#www'); var linkedin = document.querySelector('#linkedin'); var github = document.querySelector('#github'); var body = document.querySelector('#body'); var signal = document.querySelector('#signal'); data.name && (name.innerHTML = data.name); data.email && (email.innerHTML = data.email); data.phone && (phone.innerHTML = data.phone); data.address && (address.innerHTML = data.address); if (data.www) { var a = document.createElement('a'); a.target = '_blank'; a.innerText = a.href = data.www; www.appendChild(a); } if (data.linkedin) { var a = document.createElement('a'); a.target = '_blank'; a.innerText = a.href = data.linkedin; linkedin.appendChild(a); } if (data.github) { var a = document.createElement('a'); a.target = '_blank'; a.innerText = a.href = data.github; github.appendChild(a); } brand.querySelectorAll('[data-icon]').forEach(function (icon) { var i = document.createElement('i'); i.className = icon.getAttribute('data-icon'); icon.appendChild(i); }); var lang = document.querySelector('html').lang; var dateFormat = getDateFormat(lang); moment.locale(lang); date.innerHTML = moment().format(dateFormat); window.setInterval(function () { date.innerHTML = moment().format(dateFormat); }, 1000); if (data.position && data.position.length) { var select = document.createElement('select'); select.onchange = function (e) { getCL({ url: this.value, success: function (text) { body.contentEditable = true; body.innerHTML = marked(text); body.style.display = 'inherit'; signal.style.display = 'inherit'; } }); } position.appendChild(select); data.position.forEach(function (pos, i) { if (i === 0) { var placeholder = document.createElement('option'); placeholder.text = position.getAttribute('data-placeholder'); placeholder.disabled = true; placeholder.selected = true; select.appendChild(placeholder); } var option = document.createElement('option'); option.value = pos.file; option.text = pos.name; select.appendChild(option); }); signal.onclick = function () { var step = 2; var accelerate = 2; var current = window.scrollY; var ani = requestAnimationFrame(function fn() { if (window.scrollY < body.offsetTop - accelerate) { current = current + step; step = step + accelerate; accelerate = accelerate * 1.2; window.scrollTo(0, current); ani = requestAnimationFrame(fn); } else { window.scrollTo(0, body.offsetTop); cancelAnimationFrame(ani); } }); }; } } function generate(data) { if (typeof data === 'object') { fillBrand(data); } } function getCL(options) { if (!options.url) return; var request = new XMLHttpRequest(); request.open('get', options.url); request.responseType = 'text'; request.addEventListener('readystatechange', function () { if (request.readyState === 4 && request.status === 200 && request.response) { options.success && options.success(request.response); } }); request.send(); } function getJSON(options) { if (!options.url) return; var request = new XMLHttpRequest(); request.open('get', options.url); request.responseType = 'json'; request.addEventListener('readystatechange', function () { if (request.readyState === 4 && request.status === 200 && request.response) { options.success && options.success(request.response); } }); request.send(); } getJSON({ url: 'data.json', success: generate });","link":"/extension/letter/index.js"},{"title":"","text":"* { margin: 0; padding: 0; box-sizing: border-box; } *:focus { outline: none; } body { font-family: Arial, Helvetica, Calibri; line-height: 1.5; font-size: 16px; overflow-y: scroll; overflow-x: hidden; } a { text-decoration: none; color: #fff; cursor: pointer; display: inline-block; } a:after { content: ''; width: 0; height: 2px; margin-top: -2px; float: right; background: #fff; transition: width 0.3s ease; } a:hover:after { width: 100%; } div:not([contenteditable=\"true\"]) { user-select: none; } #letter { min-width: 1024px; } #brand { height: 100vh; background: #047; color: #fff; margin: 0 -100vw; padding: 0 100vw; overflow: hidden; position: relative; } #signal { position: absolute; bottom: 0; text-align: center; font-size: 3em; width: 100%; display: none; cursor: pointer; } #signal i { text-shadow: 0 0 16px; animation: shake 0.6s ease infinite; } #frame { height: 100%; width: 100%; position: relative; } #frame:before { content: ''; position: absolute; top: 0; right: 0; height: calc(100vmax + 1024px); width: 100vmax; background: #025; transform-origin: top right; transform: rotate(52deg); } .top, .bottom { position: absolute; width: 100%; padding: 80px; } .top { top: 0; left: 0; } .bottom { bottom: 0; right: 0; } .bottom i { margin-left: 16px; } .table { display: table; } .table-cell { display: table-cell; vertical-align: middle; } #avatar { width: calc(50vmin - 80px); } #avatar img { display: block; height: calc(50vmin - 80px); float: left; border-radius: 50%; } #name, #date, #position { margin-left: 32px; line-height: 1; } #name { font-size: 3em; margin-bottom: 32px; } #date { font-size: 1.5em; margin-bottom: 32px; } #position { margin-bottom: 32px; display: inline-block; min-width: 50vmin; position: relative; vertical-align: middle; overflow: hidden; background-color: #fff; text-shadow: none; border-radius: 4px; transition: box-shadow 0.3s ease; z-index: 2; } #position:hover { box-shadow: inset 0 0 8px #025; } #position:before { content: ''; position: absolute; width: 0; height: 0; border: 8px solid transparent; border-top-color: #025; top: 20px; right: 12px; z-index: -2; } #position select { font-size: 1.25em; padding: 12px; padding-right: 40px; width: 100%; border: none; background: transparent; background-image: none; -webkit-appearance: none; -moz-appearance: none; cursor: pointer; line-height: 1; } #position select option { cursor: pointer; } #position select:focus { outline: none; } #email, #phone, #address, #www, #linkedin, #github { text-align: right; line-height: 2; font-size: 1.25em; } #body { display: none; animation: appear 0.6s ease; padding: 80px; min-height: 100vh; max-width: 1024px; margin: 0 auto; } @-moz-keyframes shake { from { transform: translateY(-16px); } to { transform: translateY(0); } } @-webkit-keyframes shake { from { transform: translateY(-16px); } to { transform: translateY(0); } } @-o-keyframes shake { from { transform: translateY(-16px); } to { transform: translateY(0); } } @keyframes shake { from { transform: translateY(-16px); } to { transform: translateY(0); } } @-moz-keyframes appear { from { opacity: 0; } to { opacity: 1; } } @-webkit-keyframes appear { from { opacity: 0; } to { opacity: 1; } } @-o-keyframes appear { from { opacity: 0; } to { opacity: 1; } } @keyframes appear { from { opacity: 0; } to { opacity: 1; } }","link":"/extension/letter/index.css"},{"title":"","text":"* { margin: 0; padding: 0; box-sizing: border-box; } *:focus { outline: none; } body { font-family: Arial, Helvetica, Calibri; line-height: 1.5; font-size: 16pt; } body::-webkit-scrollbar { width: 8px; height: 8px; } body::-webkit-scrollbar-thumb { background: #025; } #print { position: fixed; right: 32pt; bottom: 32pt; height: 64pt; width: 64pt; user-select: none; cursor: pointer; border-radius: 50%; background-size: 32pt; background-position: center; background-repeat: no-repeat; background-color: #fff; background-image: url(\"print-solid.svg\"); transition: box-shadow 0.2s; } #print:hover { box-shadow: 0 0 8pt; } #print:active { box-shadow: inset 0 0 8pt; } #resume { margin: 0 auto; min-width: 960pt; max-width: auto; min-height: auto; overflow: hidden; color: #000; background: #fff; } #resume:after { display: block; clear: both; content: ''; } #side, #main { float: left; display: inline-block; } #side { min-height: auto; width: 384pt; color: #fff; background: #047; line-height: 2; } #side > div { padding: 32pt 32pt 0 32pt; } #side > div:before { margin: 0 -32pt; padding: 0 32pt; } #side > div:first-child, #side > div:last-child { padding: 32pt; } #avatar { background: #025; position: relative; } #photo { width: 100%; display: block; } #fileOpen { width: 100%; height: 100%; position: absolute; left: 0; top: 0; opacity: 0; cursor: pointer; } #name, #position { line-height: 1.25; } #name { font-size: 3em; } #position { font-size: 1.25em; font-style: italic; padding-top: 16pt; } #personalInfo:before, #skill:before, #language:before { font-size: 1.25em; line-height: 2.5; display: block; content: attr(data-label); background: #025; } #personalInfo > div, #skill > div, #language > div { padding-top: 16pt; } #personalInfo > div:before, #skill > div:before, #language > div:before { display: block; content: attr(data-label); font-weight: bold; } #personalInfo > div:first-child, #skill > div:first-child, #language > div:first-child { padding-top: 32pt; } #language .ruler { height: 64pt; } #language .ruler > div:first-child { background: #4caf50; } #language .ruler > div:last-child { background: #ffc107; } #language .ruler > div { display: inline-block; height: 100%; } #language .desc > div:before { content: ''; display: block; float: left; margin: 7.2pt 0; margin-right: 16pt; height: 16pt; width: 32pt; } #language .desc > div:first-child:before { background: #4caf50; } #language .desc > div:last-child:before { background: #ffc107; } #main { width: calc(100% - 384pt); } #intro { padding: 32pt; line-height: 2; } #education:before { padding: 0 32pt; border-top: 1pt solid #047; border-bottom: 1pt solid #047; color: #047; font-weight: bold; font-size: 1.5em; line-height: 2; display: block; content: attr(data-label); } #education td { vertical-align: middle; padding: 4pt; } #education > table { font-size: 1em; line-height: 2; padding: 32pt 32pt 0 32pt; width: 100%; border-spacing: 0; } #education > table .school { font-size: 1.25em; font-weight: bold; } #education > table td:nth-child(2) { text-align: right; } #education > table .ruler { padding: 0.5em 0; } #education > table .ruler div { position: absolute; height: 8pt; } #education > table .ruler > div { position: relative; } #education > table .ruler .sup { background: #fff; } #education > table .ruler .sub[data-num='1'] { background: #9289f3; } #education > table .ruler .sub[data-num='2'] { background: #aade46; } #education > table .ruler .sub[data-num='3'] { background: #43a1ff; } #education > table .ruler .sub[data-num='4'] { background: #d021a5; } #education > table .ruler .sub[data-num='5'] { background: #f76b1c; } #education > table .ruler .sub[data-num='6'] { background: #f02fc2; } #education > table .ruler .sub[data-num='7'] { background: #17ead9; } #education > table .ruler .sub[data-num='8'] { background: #5d6874; } #education > table .desc { padding: 0.5em 0; } #education > table .desc:after { display: block; clear: both; content: ''; } #education > table .desc > div { float: left; padding-right: 16pt; } #education > table .desc > div:before { content: ''; display: block; float: left; margin: 7.2pt 0; margin-right: 8pt; height: 16pt; width: 32pt; } #education > table .desc > div:last-child { padding-right: 0; } #education > table .desc > div:nth-child(1):before { background: #9289f3; } #education > table .desc > div:nth-child(2):before { background: #aade46; } #education > table .desc > div:nth-child(3):before { background: #43a1ff; } #education > table .desc > div:nth-child(4):before { background: #d021a5; } #education > table .desc > div:nth-child(5):before { background: #f76b1c; } #education > table .desc > div:nth-child(6):before { background: #f02fc2; } #education > table .desc > div:nth-child(7):before { background: #17ead9; } #education > table .desc > div:nth-child(8):before { background: #5d6874; } #education > table:last-child { padding: 32pt; } #experience:before, #project:before { padding: 0 32pt; border-top: 1pt solid #047; border-bottom: 1pt solid #047; color: #047; font-weight: bold; font-size: 1.5em; line-height: 2; display: block; content: attr(data-label); } #experience td, #project td { vertical-align: middle; padding: 4pt; } #experience > table, #project > table { font-size: 1em; line-height: 2; padding: 32pt 32pt 0 32pt; width: 100%; border-spacing: 0; } #experience > table .title, #project > table .title { font-size: 1.25em; font-weight: bold; } #experience > table td:nth-child(2), #project > table td:nth-child(2) { text-align: right; } #experience > table:last-child, #project > table:last-child { padding: 32pt; } #experience .employer { font-size: 1.25em; } ul { list-style-type: square; } li { margin-left: 16pt; } @media print { #print { display: none; } #resume { margin: 0 !important; width: 100vw !important; } #resume, #side, #main { height: 100vh !important; } }","link":"/extension/resume/index.css"},{"title":"","text":"Test var _2048 = new Yao2048(document.querySelector('#test')); _2048.show(); $.get('https://v1.itooi.cn/netease/songList', { 'id': 998389130 }, function (json) { if (json.data != undefined && json.data != null && json.data.tracks != undefined && json.data.tracks != null) { $('#test').append(new YaoPlayer('YaoPlayer', json.data.tracks.map(song => { return { 'name': song.name, 'singer': song.artists.map(artist => artist.name).join(', '), 'lrc': 'Not found', 'pic': song.album.picUrl, 'url': `https://v1.itooi.cn/netease/url?id=${song.id}&quality=128` }; }))); } }, 'json');","link":"/extension/test/index.html"},{"title":"","text":"/** * Based on jQuery, fontawesome */ (function (window, document) { var _player = function (id, playlist) { if (playlist == undefined || playlist == null || playlist.length < 1) { /** sample playlist = [ { 'name': 'Test', 'singer': 'Tester', 'lrc': 'Not found', 'pic': 'https://s.gravatar.com/avatar/91c1b1d830c2daab93ac478c9852c2c8?s=72', 'url': 'test.mp3' } ] */ return; } var audio = document.createElement('audio'); // Layout var $outer = $('').css({ 'position': 'fixed', 'right': '-208px', 'top': '56px', 'box-shadow': '0 0 1px grey', 'width': '280px', 'background-color': 'white' }).attr('id', id); var $coverButton = this.Component.CoverButton(); var $prevButton = this.Component.ControlButton({ 'icon': '' }); var $playButton = this.Component.CustomPlayControlButton(); var $nextButton = this.Component.ControlButton({ 'icon': '' }); var $listButton = this.Component.ControlButton({ 'icon': '' }); var $lyricButton = this.Component.ControlButton({ 'icon': '' }); var $modeButton = this.Component.CustomModeControlButton(); var $songInfo = this.Component.SongInfo(); var $progressBar = this.Component.ProgressBar(); var $progressLabel = this.Component.ProgressLabel(); var $lyricView = this.Component.LyricView(); var $volumeButton = this.Component.CustomVolumeControlButton(function (volume) { // interface audio.volume = volume; }); var $listView = this.Component.ListView(playlist); var $extra = this.Component.InOut(); // ... $outer.append($coverButton); $outer.append($songInfo); $outer.append($prevButton); $outer.append($playButton); $outer.append($nextButton); $outer.append($listButton); $outer.append($lyricButton); $outer.append($modeButton); $outer.append($volumeButton); $outer.append($progressBar); $outer.append($progressLabel); $outer.append($listView); $outer.append($lyricView); $outer.append($extra); $songInfo.css({ 'position': 'absolute', 'top': '0', 'left': '76px', 'width': '144px' }) $volumeButton.css({ 'position': 'absolute', 'top': '48px', 'right': '4px' }) $modeButton.css({ 'position': 'absolute', 'top': '48px', 'right': '28px' }) $nextButton.css({ 'position': 'absolute', 'top': '48px', 'right': '52px' }) $playButton.css({ 'position': 'absolute', 'top': '48px', 'right': '76px' }) $prevButton.css({ 'position': 'absolute', 'top': '48px', 'right': '100px' }) $listButton.css({ 'position': 'absolute', 'top': '0', 'right': '4px' }) $lyricButton.css({ 'position': 'absolute', 'top': '0', 'right': '28px' }) $progressBar.css({ 'position': 'absolute', 'top': '24px', 'left': '72px' }) $progressLabel.css({ 'position': 'absolute', 'top': '48px', 'left': '76px', 'width': '72px' }) $listView.css({ 'display': 'none' }) $lyricView.css({ 'display': 'none' }) // Setting var currentVolume = 0.69; var currentIndex = 0; var currentMode = this.Component.MODE_NORMAL; var currentPlayState = false; var mouseDownTemp = -1; var mouseUpTemp = -1; var prevStack = []; var _player_self = this; // Interface $listButton.click(function () { $lyricView.hide(); $listView.slideToggle(); }); $lyricButton.click(function () { $listView.hide(); $lyricView.slideToggle(); }); $coverButton.click(function () { if (audio.paused && audio.readyState >= 3) { audio.play(); audio.autoplay = true; } else { audio.pause(); audio.autoplay = false; } }); $playButton.click(function () { if (audio.paused && audio.readyState >= 3) { audio.play(); audio.autoplay = true; } else { audio.pause(); audio.autoplay = false; } }); $nextButton.click(function () { if (currentMode == _player_self.Component.MODE_NORMAL || currentMode == _player_self.Component.MODE_REPEAT) { prevStack.push(currentIndex); currentIndex += 1; if (currentIndex >= playlist.length) { currentIndex = 0; } } else if (currentMode == _player_self.Component.MODE_RANDOM) { prevStack.push(currentIndex); currentIndex = Math.floor(Math.random() * playlist.length); } audio.src = playlist[currentIndex].url + '&br=128000'; audio.load(); }); $prevButton.click(function () { if (prevStack.length > 0) { currentIndex = prevStack.pop(); } else if (currentMode == _player_self.Component.MODE_NORMAL || currentMode == _player_self.Component.MODE_REPEAT) { currentIndex -= 1; if (currentIndex < 0) { currentIndex = playlist.length - 1; } } else if (currentMode == _player_self.Component.MODE_RANDOM) { currentIndex = Math.floor(Math.random() * playlist.length); } audio.src = playlist[currentIndex].url + '&br=128000'; audio.load(); }); $listView.children('div').click(function () { prevStack.push(currentIndex); currentIndex = $(this).index(); audio.src = playlist[currentIndex].url + '&br=128000'; audio.load(); }); $modeButton.click(function () { currentMode += 1; if (currentMode > 2) { currentMode = 0; } $modeButton.setMode(currentMode); }); $progressBar.mousedown(function (e) { mouseDownTemp = e.pageX - e.currentTarget.offsetLeft - e.currentTarget.offsetParent.offsetLeft; mouseUpTemp = mouseDownTemp / e.currentTarget.offsetWidth; $progressBar.setCurrentProgress(mouseUpTemp); }); $progressBar.mousemove(function (e) { mouseUpTemp = (e.pageX - e.currentTarget.offsetLeft - e.currentTarget.offsetParent.offsetLeft) / e.currentTarget.offsetWidth; if (mouseDownTemp >= 0) { $progressBar.setCurrentProgress(mouseUpTemp); } }); $progressBar.mouseup(function (e) { if (mouseDownTemp >= 0) { audio.currentTime = mouseUpTemp * audio.duration; mouseDownTemp = -1; } }); $progressBar.mouseleave(function (e) { if (mouseDownTemp >= 0) { audio.currentTime = mouseUpTemp * audio.duration; mouseDownTemp = -1; } }); audio.onabort = audio.onerror = function () { $songInfo.setSongInfo({ 'name': 'Error', 'singer': 'Error' }); $coverButton.setCover('https://s.gravatar.com/avatar/91c1b1d830c2daab93ac478c9852c2c8?s=72'); }; audio.onpause = function () { currentPlayState = false; $coverButton.setPlayState(currentPlayState); $playButton.setPlayState(currentPlayState); }; audio.onplay = function () { currentPlayState = true; $coverButton.setPlayState(currentPlayState); $playButton.setPlayState(currentPlayState); }; audio.onloadstart = function () { $coverButton.setPlayState(currentPlayState); $playButton.setPlayState(currentPlayState); $listView.setCurrentIndex(currentIndex); $songInfo.setSongInfo(playlist[currentIndex]); $coverButton.setCover(playlist[currentIndex].pic.replace('http://', 'https://') || 'https://s.gravatar.com/avatar/91c1b1d830c2daab93ac478c9852c2c8?s=72'); $progressBar.setLoadingProgress(0); $progressBar.setCurrentProgress(0); $progressLabel.setTimePass(0); $progressLabel.setTimeTotal(playlist[currentIndex].time || '??:??'); setTimeout(function () { $.get(playlist[currentIndex].lrc.replace('http://', 'https://'), function (data) { $lyricView.setLyric(data.replace(/\\[[0-9:\\.]+\\]/g, '').replace(/\\n/g, '')); }, 'text'); }, 1000); }; audio.onprogress = function (e) { if (e.target.buffered.length > 0) { $progressBar.setLoadingProgress(e.target.buffered.end(0) / e.target.duration); } }; audio.ontimeupdate = function (e) { if (e.target.currentTime >= 0) { if (mouseDownTemp == -1) { $progressBar.setCurrentProgress(e.target.currentTime / e.target.duration); } $progressLabel.setTimePass(Math.floor(e.target.currentTime)); } }; audio.onended = function () { if (currentMode == _player_self.Component.MODE_NORMAL) { prevStack.push(currentIndex); currentIndex += 1; if (currentIndex >= playlist.length) { currentIndex = 0; } } else if (currentMode == _player_self.Component.MODE_REPEAT) { audio.load(); return; } else if (currentMode == _player_self.Component.MODE_RANDOM) { prevStack.push(currentIndex); currentIndex = Math.floor(Math.random() * playlist.length); } audio.src = playlist[currentIndex].url + '&br=128000'; audio.load(); }; // Extra Initialize $coverButton.setPlayState(currentPlayState); $coverButton.setCover('https://s.gravatar.com/avatar/91c1b1d830c2daab93ac478c9852c2c8?s=72'); $playButton.setPlayState(currentPlayState); $volumeButton.setVolume(currentVolume); $modeButton.setMode(currentMode); $songInfo.setSongInfo(playlist[currentIndex]); $progressBar.setLoadingProgress(0); $progressBar.setCurrentProgress(0); $progressLabel.setTimePass(0); $progressLabel.setTimeTotal(playlist[currentIndex].time || '??:??'); $listView.setCurrentIndex(currentIndex); audio.src = playlist[currentIndex].url + '&br=128000'; audio.load(); // Extra... var inOutState = false; $extra.mousedown(function () { if (inOutState) { $outer.animate({ 'right': '-208px' }); $listView.slideUp(); $lyricView.slideUp(); $extra.setIn(); } else { $outer.animate({ 'right': '0' }); $extra.setOut(); } inOutState = !inOutState; }); return $outer; }; _player.prototype = { constructor: _player, Component: { MODE_NORMAL: 0, MODE_REPEAT: 1, MODE_RANDOM: 2, InOut: function () { var $div = $('').css({ 'height': '72px', 'font-size': '16px', 'user-select': 'none', 'background-color': '#ffffffaa', 'position': 'absolute', 'left': '-16px', 'top': '0', 'width': '16px', 'text-align': 'center', 'color': 'black' }); var $i = $('').css({ 'margin': '28px 0' }); $div.append($i); $div.hover(function () { $(this).css({ 'background-color': '#102a4baa', 'color': 'white' }); }, function () { $(this).css({ 'background-color': '#ffffffaa', 'color': 'black' }); }); $div.setIn = function () { $(this).children('i').removeClass('fa-angle-right').addClass('fa-angle-left'); }; $div.setOut = function () { $(this).children('i').removeClass('fa-angle-left').addClass('fa-angle-right'); }; return $div; }, LyricView: function () { var $div = $('').css({ 'height': '156px', 'font-size': '14px', 'border-top': '1px solid lightgrey', 'user-select': 'text', 'overflow-y': 'auto', 'padding': '4px' }); $div.append(''); $div.setLyric = function (html_text) { if (html_text.trim() == \"\") { $(this).children('p').html('Not found'); } else { $(this).children('p').html(html_text); } }; return $div; }, ListView: function (list) { var $div = $('').css({ 'height': '156px', // (14 + 6 * 2)px * 6 'line-height': '100%', 'font-size': '14px', 'border-top': '1px solid lightgrey', 'cursor': 'pointer', 'user-select': 'none', 'overflow-y': 'auto' }); list.forEach(function (song, i) { var $item = $('').css({ 'height': '14px', 'padding': '6px' }); var $signal = $('').css({ 'float': 'left', 'display': 'inline-block', 'height': '14px', 'width': '6px', 'background-color': 'goldenrod', 'margin-right': '8px', 'box-sizing': 'content-box', 'display': 'none' }); var $index = $('').css({ 'float': 'left', 'margin-right': '8px', 'box-sizing': 'content-box' }).text(i + 1); var $title = $('').css({ 'float': 'left', 'box-sizing': 'content-box', 'text-overflow': 'ellipsis', 'white-space': 'nowrap', 'width': '152px', // 228px * 2/3 'overflow': 'hidden' }).text(song.name); var $artist = $('').css({ 'float': 'right', 'box-sizing': 'content-box', 'text-overflow': 'ellipsis', 'white-space': 'nowrap', 'width': '76px', // 228px * 1/3 'overflow': 'hidden', 'text-align': 'right' }).text(song.singer); $item.append($signal); $item.append($index); $item.append($title); $item.append($artist); $div.append($item); }); $div.children('div').hover(function () { $(this).css('background-color', '#eee'); }, function () { $(this).css('background-color', 'transparent'); }); $div.setCurrentIndex = function (index) { $(this).children('div').css('padding', '6px'); $(this).children('div').children('div').hide(); $(this).children('div').eq(index).css('padding', '6px 6px 6px 0'); $(this).children('div').eq(index).children('div').show(); }; return $div; }, ProgressLabel: function () { var $div = $('').css({ 'height': '12px', 'line-height': '100%', 'font-size': '12px', 'padding': '6px 4px', 'width': '68px', 'user-select': 'none' }); var $timePass = $(''); var $timeTotal = $(''); $div.append($timePass); $div.append(' / '); $div.append($timeTotal); $div.setTimeTotal = function (seconds) { if (seconds == '??:??') { $(this).children('span').eq(1).text('??:??'); return; } var min = Math.floor(seconds / 60); var sec = seconds % 60; if (min < 10) { min = '0' + min; } if (sec < 10) { sec = '0' + sec; } $(this).children('span').eq(1).text(min + ':' + sec); }; $div.setTimePass = function (seconds) { var min = Math.floor(seconds / 60); var sec = seconds % 60; if (min < 10) { min = '0' + min; } if (sec < 10) { sec = '0' + sec; } $(this).children('span').eq(0).text(min + ':' + sec); }; return $div; }, ProgressBar: function () { var $div = $('').css({ 'width': '200px', 'height': '16px', 'padding': '4px', 'cursor': 'pointer', 'overflow': 'hidden', 'user-select': 'none' }); var $progressInner = $('').css({ 'width': 'calc(100% - 8px)', 'height': '4px', 'margin': '7px 4px', 'background-color': '#d3d3d3', 'border-radius': '2px', 'position': 'relative', 'pointer-events': 'none' }); var $progressLoading = $('').css({ 'min-width': '4px', 'max-width': 'calc(100% - 8px)', 'width': 'calc(75% - 8px)', 'height': '4px', 'margin': '7px 4px', 'background-color': '#aaa', 'border-radius': '2px', 'position': 'relative', 'top': '-11px', 'pointer-events': 'none' }); var $progressCurrent = $('').css({ 'min-width': '4px', 'max-width': 'calc(100% - 8px)', 'width': 'calc(50% - 8px)', 'height': '4px', 'margin': '7px 4px', 'background-color': '#000', 'border-radius': '2px', 'float': 'left', 'position': 'relative', 'top': '-29px', 'pointer-events': 'none' }); var $progressThumb = $('').css({ 'width': '4px', 'height': '4px', 'border-radius': '50%', 'border': '4px solid goldenrod', 'margin': '3px 0', 'margin-left': '-12px', 'float': 'left', 'position': 'relative', 'top': '-29px', 'pointer-events': 'none' }); $div.append($progressInner); $div.append($progressLoading); $div.append($progressCurrent); $div.append($progressThumb); $div.setCurrentProgress = function (progress) { $(this).children('div').eq(2).css('width', progress * 100 + '%'); }; $div.setLoadingProgress = function (progress) { $(this).children('div').eq(1).css('width', progress * 100 + '%'); }; return $div; }, ControlButton: function (options) { var $div = $('') .css({ 'width': '16px', 'height': '16px', 'line-height': '100%', 'font-size': '16px', 'padding': '4px', 'opacity': '0.6', 'display': 'inline-block', 'text-align': 'center', 'cursor': 'pointer', 'vertical-align': 'middle' }) .html(options.icon || '') .css(options.css || {}) .hover(function () { $(this).css('opacity', '1'); }, function () { $(this).css('opacity', '0.6'); }); $div.setIcon = function (icon) { $(this).html(icon || ''); }; return $div; }, CoverButton: function () { var $div = $('').css({ 'width': '72px', 'height': '72px', 'cursor': 'pointer', 'background-color': 'goldenrod', 'background-size': 'cover', 'background-repeat': 'no-repeat', 'color': 'white' }); $div.html(''); $div.children('i').css({ 'line-height': '100%', 'font-size': '32px', 'opacity': '0.8', 'position': 'relative', 'top': '20px', 'left': '20px', 'text-shadow': '0 0 0.1px black' }); $div.hover(function () { $(this).children('i').css('opacity', '1'); }, function () { $(this).children('i').css('opacity', '0.8'); }); $div.setPlayState = function (state) { if (state) { $(this).children('i') .removeClass('fa-play-circle') .addClass('fa-pause-circle') .animate({ 'font-size': '20px', 'top': '48px', 'left': '48px' }); } else { $(this).children('i') .removeClass('fa-pause-circle') .addClass('fa-play-circle') .animate({ 'font-size': '32px', 'top': '20px', 'left': '20px' }); } }; $div.setCover = function (cover) { $(this).css('background-image', 'url(' + cover + ')'); }; return $div; }, SongInfo: function () { var $div = $('').css({ 'height': '16px', 'line-height': '100%', 'padding': '4px', 'cursor': 'default', 'user-select': 'text', 'white-space': 'nowrap', 'text-overflow': 'ellipsis', 'overflow': 'hidden' }); var $title = $('').css({ 'font-size': '16px', 'color': 'black' }); var $artist = $('').css({ 'font-size': '14px', 'color': 'darkgrey' }); $div.append($title); $div.append(' - '); $div.append($artist); $div.setSongInfo = function (options) { if (options.name) { $(this).children('span').eq(0).text(options.name); } if (options.singer) { $(this).children('span').eq(1).text(options.singer); } }; return $div; }, CustomPlayControlButton: function () { var $playButton = this.ControlButton({ 'icon': '', 'css': { 'width': '18px', 'height': '18px', 'font-size': '18px', 'padding': '3px' } }); $playButton.setPlayState = function (state) { if (state) { $(this).children('i') .removeClass('fa-play-circle') .addClass('fa-pause-circle'); } else { $(this).children('i') .removeClass('fa-pause-circle') .addClass('fa-play-circle'); } }; return $playButton; }, CustomVolumeControlButton: function (volumeChangedListener) { var $volumeButton = this.ControlButton({ 'icon': '' }).css('width', '16px'); var $volumeBar = $('').css({ 'width': '6px', 'height': '48px', 'border-radius': '8px', 'box-shadow': '0 0 0 1px', 'margin': '4px 6px', 'overflow': 'hidden', 'margin-right': '-52px', 'background-color': 'white', 'z-index': '99999', 'position': 'fixed' }); var $volumeBarInner = $('').css({ 'background-color': 'goldenrod', 'height': '50%', 'width': '100%' }); $volumeBar.mousedown(function (e) { $(this).children('div').css('height', e.offsetY); var volume = e.offsetY / $(this).height(); $(this).siblings('i').removeClass('fa-volume-off fa-volume-down fa-volume-up'); if (volume < 0.3) { $(this).siblings('i').addClass('fa-volume-off'); } else if (volume < 0.7) { $(this).siblings('i').addClass('fa-volume-down'); } else { $(this).siblings('i').addClass('fa-volume-up'); } if (volumeChangedListener) { volumeChangedListener(volume); } }); $volumeButton.children('i').click(function () { $(this).siblings('div').children('div').css('height', 0); $(this).removeClass('fa-volume-down fa-volume-up') .addClass('fa-volume-off'); if (volumeChangedListener) { volumeChangedListener(0); } }); $volumeButton.hover(function () { $(this).children('div').show(); }, function () { $(this).children('div').hide(); }); $volumeBar.hide(); $volumeBar.append($volumeBarInner); $volumeButton.append($volumeBar); $volumeButton.setVolume = function (volume) { $(this).children('div').children('div').css('height', $(this).children('div').height() * volume); $(this).siblings('i').removeClass('fa-volume-off fa-volume-down fa-volume-up'); if (volume < 0.3) { $(this).children('i').addClass('fa-volume-off'); } else if (volume < 0.7) { $(this).children('i').addClass('fa-volume-down'); } else { $(this).children('i').addClass('fa-volume-up'); } if (volumeChangedListener) { volumeChangedListener(volume); } }; return $volumeButton; }, CustomModeControlButton: function () { var $modeButton = this.ControlButton({ 'icon': '' }); var normal = this.MODE_NORMAL; var repeat = this.MODE_REPEAT; var random = this.MODE_RANDOM; $modeButton.setMode = function (mode) { if (mode == normal) { $(this).children('i') .removeClass('fa-redo-alt fa-random') .addClass('fa-exchange-alt'); } else if (mode == repeat) { $(this).children('i') .removeClass('fa-exchange-alt fa-random') .addClass('fa-redo-alt'); } else if (mode == random) { $(this).children('i') .removeClass('fa-redo-alt fa-exchange-alt') .addClass('fa-random'); } }; return $modeButton; } } }; window.YaoPlayer = _player; })(window, document);","link":"/code/yaoplayer.js"},{"title":"","text":"function fillAvatar(data) { var avatar = document.querySelector('#avatar'); var photo = document.createElement('img'); var fileOpen = document.createElement('input'); photo.id = 'photo'; photo.src = data.resume.side.avatar; fileOpen.id = 'fileOpen'; fileOpen.type = 'file'; fileOpen.accept = 'image/*'; avatar.appendChild(photo); avatar.appendChild(fileOpen); fileOpen.onchange = function () { var file = fileOpen.files[0]; if (file) { var reader = new FileReader(); reader.readAsDataURL(file); reader.onload = function () { photo.src = reader.result; } } }; } function fillBrand(data) { var name = document.querySelector('#name'); name.innerHTML = data.resume.side.brand.name; var position = document.querySelector('#position'); position.innerHTML = data.resume.side.brand.position; } function fillPersonal(data) { var address = document.querySelector('#address'); address.innerHTML = data.resume.side.personal.address; var phone = document.querySelector('#phone'); phone.innerHTML = data.resume.side.personal.phone; var email = document.querySelector('#email'); email.innerHTML = data.resume.side.personal.email; var www = document.querySelector('#www'); www.innerHTML = data.resume.side.personal.www; } function fillSkill(data) { var frontend = document.querySelector('#frontend'); frontend.innerHTML = data.resume.side.skill.frontend; var backend = document.querySelector('#backend'); backend.innerHTML = data.resume.side.skill.backend; var database = document.querySelector('#database'); database.innerHTML = data.resume.side.skill.database; var tool = document.querySelector('#tool'); tool.innerHTML = data.resume.side.skill.tool; var other = document.querySelector('#other'); other.innerHTML = data.resume.side.skill.other; } function fillLanguage(data) { var language = document.querySelector('#language'); var ruler = language.querySelector('.ruler'); var desc = language.querySelector('.desc'); var languages = data.resume.side.language; languages.forEach(function (lang) { var block = document.createElement('div'); block.style.width = lang.data + '%'; ruler.appendChild(block); var name = document.createElement('div'); name.innerHTML = lang.name; desc.appendChild(name); }); } function fillIntro(data) { var intro = document.querySelector('#intro'); intro.innerHTML = data.resume.main.intro; } function fillEducation(data) { var html = document.querySelector('html'); var education = document.querySelector('#education'); var edus = data.resume.main.education; edus.forEach(function (edu) { var table = document.createElement('table'); var tr0 = document.createElement('tr'); var tr1 = document.createElement('tr'); var school = document.createElement('td'); var time = document.createElement('td'); school.className = 'school'; school.innerHTML = edu.school; time.innerHTML = edu.start.concat(\"&nbsp;-&nbsp;\", edu.end); tr0.appendChild(school); tr0.appendChild(time); var field = document.createElement('td'); var grade = document.createElement('td'); field.innerHTML = edu.field; grade.innerHTML = (html.lang === 'zh' ? '成绩' : 'Grade') + ':&nbsp;' + edu.grade; tr1.appendChild(field); tr1.appendChild(grade); table.appendChild(tr0); table.appendChild(tr1); var tr2 = document.createElement('tr'); var extend = document.createElement('td'); var ruler = document.createElement('div'); var desc = document.createElement('div'); ruler.className = 'ruler'; desc.className = 'desc'; extend.appendChild(ruler); extend.appendChild(desc); var gridWidth = 100 / edu.semester; edu.extend.forEach(function (ex, i) { if (ex.data.length === 2) { var block = document.createElement('div'); var sub = document.createElement('div'); sub.className = 'sub'; sub.setAttribute('data-num', i + 1); sub.style.width = ex.data[1] * gridWidth + '%'; var sup = document.createElement('div'); sup.className = 'sup'; sup.style.width = ex.data[0] * gridWidth + '%'; block.appendChild(sub); block.appendChild(sup); ruler.appendChild(block); var inlineBlock = document.createElement('div'); inlineBlock.innerHTML = ex.name; desc.appendChild(inlineBlock); } }); tr2.appendChild(extend); table.appendChild(tr2); var tr3 = document.createElement('tr'); var desc = document.createElement('td'); var ul = document.createElement('ul'); edu.desc.forEach(function (text) { var li = document.createElement('li'); li.innerHTML = text; ul.appendChild(li); }); desc.appendChild(ul); tr3.appendChild(desc); table.appendChild(tr3); education.appendChild(table); }); } function fillProject(data) { var project = document.querySelector('#project'); var projs = data.resume.main.project; projs.forEach(function (proj) { var table = document.createElement('table'); var tr0 = document.createElement('tr'); var title = document.createElement('td'); var time = document.createElement('td'); title.className = 'title'; title.innerHTML = proj.title; time.innerHTML = proj.start.concat(\"&nbsp;-&nbsp;\", proj.end); tr0.appendChild(title); tr0.appendChild(time); table.appendChild(tr0); var tr1 = document.createElement('tr'); var desc = document.createElement('td'); var ul = document.createElement('ul'); proj.desc.forEach(function (text) { var li = document.createElement('li'); li.innerHTML = text; ul.appendChild(li); }); desc.appendChild(ul); tr1.appendChild(desc); table.appendChild(tr1); project.appendChild(table); }); } function fillExperience(data) { var experience = document.querySelector('#experience'); var exps = data.resume.main.experience; exps.forEach(function (exp) { var table = document.createElement('table'); var tr0 = document.createElement('tr'); var tr1 = document.createElement('tr'); var title = document.createElement('td'); title.className = 'title'; title.innerHTML = exp.title; tr0.appendChild(title); var employer = document.createElement('td'); var time = document.createElement('td'); employer.className = 'employer'; employer.innerHTML = exp.employer; time.innerHTML = exp.start.concat(\"&nbsp;-&nbsp;\", exp.end); tr1.appendChild(employer); tr1.appendChild(time); table.appendChild(tr0); table.appendChild(tr1); var tr2 = document.createElement('tr'); var desc = document.createElement('td'); var ul = document.createElement('ul'); exp.desc.forEach(function (text) { var li = document.createElement('li'); li.innerHTML = text; ul.appendChild(li); }); desc.appendChild(ul); tr2.appendChild(desc); table.appendChild(tr2); experience.appendChild(table); }); } function highlight(data) { if (Array.isArray(data.keyword) && data.keyword.length) { var main = document.querySelector('#main'); data.keyword.forEach(function (word) { main.innerHTML = main.innerHTML.replace(word, '' + word + ''); }); } } function fixResume(paper, custom) { var resume = document.querySelector('#resume'); var side = document.querySelector('#side'); custom && (resume.style.maxWidth = custom); switch (paper.toLowerCase()) { case 'letter': resume.style.minHeight = 279 / 216 * resume.offsetWidth + 'px'; break; case 'a4': resume.style.minHeight = 297 / 210 * resume.offsetWidth + 'px'; } side.style.height = resume.offsetHeight + 'px'; } function setPrint() { var print = document.querySelector('#print'); print.onclick = function () { window.print ? window.print() : document.execCommand('print'); } } function generate(data) { if (typeof data === 'object' && data.resume) { fillAvatar(data); fillBrand(data); fillPersonal(data); fillSkill(data); fillLanguage(data); fillIntro(data); fillEducation(data); fillExperience(data); fillProject(data); highlight(data); fixResume(data.size, data.custom_width); setPrint(); } } function getJSON(options) { if (!options.url) return; var request = new XMLHttpRequest(); request.open('get', options.url); request.responseType = 'json'; request.addEventListener('readystatechange', function () { if (request.readyState === 4 && request.status === 200 && request.response) { options.success && options.success(request.response); } }); request.send(); } getJSON({ url: 'data.json', success: generate });","link":"/extension/resume/index.js"},{"title":"","text":"{\"position\":[{\"name\":\"__test__\",\"file\":\"test.cl\"}],\"name\":\"耀\",\"email\":\"jinyao.ma@outlook.com\",\"phone\":\"N/A\",\"address\":\"广东省江门市\",\"www\":\"https://ma-jinyao.cn\",\"linkedin\":\"https://www.linkedin.com/in/jinyao-ma-01115412a\",\"github\":\"https://github.com/jinyaoMa\"}","link":"/extension/letter/chinese/data.json"},{"title":"","text":"{\"size\":\"A4\",\"custom_width\":\"1572px\",\"resume\":{\"side\":{\"avatar\":\"../my_linkedin_qr_code.zh.png\",\"brand\":{\"name\":\"耀\",\"position\":\"WEB前端开发工程师\"},\"personal\":{\"address\":\"广东省江门市\",\"phone\":\"N/A\",\"email\":\"jinyao.ma@outlook.com\",\"www\":\"ma-jinyao.cn\"},\"skill\":{\"frontend\":\"Vue, jQuery\",\"backend\":\"ASP.NET, Laravel, CodeIgniter\",\"database\":\"MySQL, Oracle, Redis\",\"tool\":\"Git, Selenium\",\"other\":\"HTTP, TCP/IP, WebSocket\"},\"language\":[{\"name\":\"普通话\",\"data\":67},{\"name\":\"英语\",\"data\":33}]},\"main\":{\"intro\":\"有良好的代码风格，通过添加注释提高代码可读性，注重代码质量，研读多个开源项目，学习改善代码的健壮性与扩展性。善于与人沟通，良好的团队合作精神和高度的责任感，能够承受压力，有较强的吃苦耐劳和创新精神。熟悉 Node.js 开发，熟练使用 npm, webpack, gulp 等工具。熟悉前端性能的优化，熟悉使用 Chrome，Safari 等前端调试工具。\",\"education\":[{\"school\":\"莫哈克学院\",\"start\":\"2016/01\",\"end\":\"2019/12\",\"field\":\"计算机系统技术 - 软件开发\",\"grade\":92,\"semester\":6,\"extend\":[{\"name\":\"Java\",\"data\":[0,6]},{\"name\":\"PHP\",\"data\":[1,6]},{\"name\":\"HTML, CSS, JavaScript, MySQL\",\"data\":[0,6]},{\"name\":\"C#, VB\",\"data\":[2,5]},{\"name\":\"Python\",\"data\":[4,6]},{\"name\":\"Swift\",\"data\":[5,6]}],\"desc\":[\"热爱 WEB /移动 相关核心课程\",\"擅长开发前端和 RESTful API\",\"追求模块化开发和代码复用性\"]}],\"experience\":[{\"title\":\"初级WEB开发工程师\",\"employer\":\"江门市普政信息科技有限公司\",\"start\":\"2019/06\",\"end\":\"2019/08\",\"desc\":[\"参与软件产品的业务分析和功能设计\",\"协助管理用户开通与用户权限\",\"深入理解 W3C 标准与 ES 规范，熟悉 HTML、CSS、JavaScript 等 Web 基础以及常用浏览器兼容方案\"]}],\"project\":[{\"title\":\"博客 (ma-jinyao.cn)\",\"start\":\"2019/01\",\"end\":\"现在\",\"desc\":[\"使用 Hexo 设计并开发个人网站\",\"熟练使用 ES6, Stylus 和 EJS 开发个性主题\",\"实现 PJAX 以提高用户体验和页面响应速度\"]},{\"title\":\"登录状态监控实验\",\"start\":\"2018/09\",\"end\":\"2018/12\",\"desc\":[\"使用 Node.js 和 Vue.js 开发单页面登录状态监控 WEB 应用\",\"通过使用 socket.io 持续发送用户状态以达到监控目的\"]},{\"title\":\"音乐信息和资源爬虫\",\"start\":\"2018/04\",\"end\":\"2018/09\",\"desc\":[\"实验从 music.163.com 爬取音乐信息和音频资源\",\"熟练使用 Postman 分析至少10个 API 和数据传输加密方法\",\"使用 Android Studio 集成爬虫代码做成一个原生音乐播放器应用程序\"]}]}},\"keyword\":null}","link":"/extension/resume/chinese/data.json"},{"title":"","text":"求职信","link":"/extension/letter/chinese/index.html"},{"title":"","text":"简历","link":"/extension/resume/chinese/index.html"},{"title":"","text":"Resume","link":"/extension/resume/english/index.html"},{"title":"","text":"Cover Letter","link":"/extension/letter/english/index.html"},{"title":"","text":"{\"size\":\"A4\",\"custom_width\":\"1572px\",\"resume\":{\"side\":{\"avatar\":\"../my_linkedin_qr_code.en.png\",\"brand\":{\"name\":\"Jinyao Ma\",\"position\":\"Web Developer\"},\"personal\":{\"address\":\"Hamilton, ON\",\"phone\":\"N/A\",\"email\":\"jinyao.ma@outlook.com\",\"www\":\"ma-jinyao.cn\"},\"skill\":{\"frontend\":\"Vue, jQuery\",\"backend\":\"ASP.NET, Laravel, CodeIgniter\",\"database\":\"MySQL, Oracle, Redis\",\"tool\":\"Git, Selenium\",\"other\":\"HTTP, TCP/IP, WebSocket\"},\"language\":[{\"name\":\"Chinese\",\"data\":67},{\"name\":\"English\",\"data\":33}]},\"main\":{\"intro\":\"Good programming practice. Pursue code readability, modularization and reusability. Good anti-stress ability. Familiar with Node.js and tools like git, npm, webpack; also with ASP.NET and tools like TFS, SVN. Highly innovative. Good analytical and entrepreneurial skills that lead to find out newer ideas from existing systems and data. Highly adaptable. Continual self-learner. Enjoys working both as a team member and individual.\",\"education\":[{\"school\":\"Mohawk College\",\"start\":\"2016/01\",\"end\":\"2019/12\",\"field\":\"Computer System Technologies - Software Development\",\"grade\":92,\"semester\":6,\"extend\":[{\"name\":\"Java\",\"data\":[0,6]},{\"name\":\"PHP\",\"data\":[1,6]},{\"name\":\"HTML, CSS, JavaScript, MySQL\",\"data\":[0,6]},{\"name\":\"C#, VB\",\"data\":[2,5]},{\"name\":\"Python\",\"data\":[4,6]},{\"name\":\"Swift\",\"data\":[5,6]}],\"desc\":[\"Followed my passion in a core of web/mobile development classes\",\"Excelled in front-end development and RESTful API\",\"Pursued modularization and reusability in development\"]}],\"experience\":[{\"title\":\"Entry Level Web Developer\",\"employer\":\"Puzheng Technology Co. Ltd.\",\"start\":\"2019/06\",\"end\":\"2019/08\",\"desc\":[\"Web developer responsible for business analysis, function design, collaborative development and coding with two teams\",\"Redesigned and developed 8+ subpages of a financial-tax system coordinating with the team\",\"Managed user login and permission system coordinating with the team, and processed 400+ of new users\"]}],\"project\":[{\"title\":\"Blog (ma-jinyao.cn)\",\"start\":\"2019/01\",\"end\":\"NOW\",\"desc\":[\"Designed and developed my website using Hexo generator\",\"Theme developed using ES6, Stylus and EJS\",\"Impelemented PJAX to boost at least 22% of user experience score\"]},{\"title\":\"Login Status Monitering Lab\",\"start\":\"2018/09\",\"end\":\"2018/12\",\"desc\":[\"Developed a status monitering web application using Node.js and Vue.js\",\"Used socket.io to send status to the moniter continuously\"]},{\"title\":\"Audio Information/Source Spider\",\"start\":\"2018/04\",\"end\":\"2018/09\",\"desc\":[\"Experimented crawling audio information and source from music.163.com\",\"Analyized 10+ URLs using Postman and encryption (RSA/AES) used in music.163.com\",\"Integrated the spider's functionalities into a native Android application\"]}]}},\"keyword\":[\"Node.js\",\"git\",\"npm\",\"webpack\",\"ASP.NET\",\"TFS\",\"SVN\",\"Hexo\",\"ES6\",\"Stylus\",\"EJS\",\"REST\",\"8+\",\"400+\",\"PJAX\",\"22%\",\"Node.js\",\"Vue.js\",\"socket.io\",\"10+\",\"Postman\",\"RSA/AES\"]}","link":"/extension/resume/english/data.json"},{"title":"","text":"{\"position\":[{\"name\":\"__test__\",\"file\":\"test.cl\"}],\"name\":\"Jinyao Ma\",\"email\":\"jinyao.ma@outlook.com\",\"phone\":\"N/A\",\"address\":\"Hamilton, ON\",\"www\":\"https://ma-jinyao.cn\",\"linkedin\":\"https://www.linkedin.com/in/jinyao-ma-01115412a\",\"github\":\"https://github.com/jinyaoMa\"}","link":"/extension/letter/english/data.json"}],"posts":[{"title":"一款在线免费图床推荐","text":"现在很多人有了自己的博客/论坛，在写作过程中难免会插入一些配图，通常会因为图床问题焦躁，要么图片加载速度慢、要么连接过期了，总之就是各种问题频发，那么今天就介绍一款免费图床 Potato ，这款图床无需注册、不限容量、永久存储。 “ Potato ”是根据新浪图床API接口开发的免费图床程序，拥有网站和安卓APP两个形态。 每张图片文件最大2MB,支持每次最多同时上传10个文件集成了阿里图床、Upload_Cc、小米、Catbox、掘金论坛等多节点上传无需注册、永久免费、不限容量、永久存储 预览主界面预览 可以直接粘贴或拖拽图片至上传区，或点击右下角进行选择本地图片上传 上传成功上传成功后，可根据自己需求选择图片插入方式进行代码/链接复制进行使用","link":"/2020/04/06/%E4%B8%80%E6%AC%BE%E5%9C%A8%E7%BA%BF%E5%85%8D%E8%B4%B9%E5%9B%BE%E5%BA%8A%E6%8E%A8%E8%8D%90/"},{"title":"对比Spring和Spring Boot中properties文件不同处理方式","text":"项目中我们总避免不了使用properties文件定义一些配置属性，然后将这些配置注入到对应属性上让其生效，那么Spring中和Spring Boot对properties处理有什么差别呢？那就一起来看看。 注意：本文创建一个简单的SpringBoot项目，分别使用两种方式来演示 1. Spring中properties属性注入1.1 配置属性值到application.properties中1.1.1 创建实体类User.java123456public class User { private Integer id; private String name; private String address; //省略getter和setter方法} 1.1.2 将属性值配置在application.properties1234# application.properties配置文件会在项目启动时就加载到Spring容器user.id=1user.name=wanikuser.address=beijing 1.1.3 注入属性到User12345678910111213@Component //将该bean添加到Spring容器中public class User { //application.properties配置文件会在项目启动时就加载到Spring容器 //这里我们可以直接使用@Value(\"${key}\")注解将properties中的值注入到指定属性 @Value(\"${user.id}\") private Integer id; @Value(\"${user.name}\") private String name; @Value(\"${user.address}\") private String address; //省略getter/setter方法，必须存在setter方法} 1.1.4 测试123456789101112//SpringBoot测试类@SpringBootTestclass PropertiesApplicationTests { //注入User对象到测试类 @Autowired User user; @Test void test1(){ System.out.println(user); }} 打印结果： 1.2 定义外部配置文件user.properties在外部自定义properties文件也是我们常用的一种方式，比如db.properties等，那么这个文件在项目启动时不会被自动加载到Spring容器中，那么我们就要通过修改上述要注入的User实现。 通过@PropertySource(path)注解指定properties文件路径 1234567891011121314@Component //将该bean添加到Spring容器中@PropertySource(\"classpath:user.properties\") //指定properties文件路径public class User { //application.properties配置文件会在项目启动时就加载到Spring容器 //这里我们可以直接使用@Value(\"${key}\")注解将properties中的值注入到指定属性 @Value(\"${user.id}\") private Integer id; @Value(\"${user.name}\") private String name; @Value(\"${user.address}\") private String address; //省略getter、setter方法} 测试：第二种方式测试成功上述介绍两种在Spring中注入properties方式，这两种方式同样在SpringBoot中适用，下面介绍Spring Boot中提供的另一种方式 2. Spring Boot中properties属性注入Spring Boot提供了一种属性安全的注入方式,在属性值较多时这种方式非常简便，省略掉在每个属性上一对一通过@Value进行注入：同样修改上述User类，如下： 123456789101112@Component //将该bean添加到Spring容器中@PropertySource(\"classpath:user.properties\")@ConfigurationProperties(prefix = \"user\")public class User { //@Value(\"${user.id}\") private Integer id; //@Value(\"${user.name}\") private String name; //@Value(\"${user.address}\") private String address; //省略getter/setter方法} 注意：这种方式只适用于properties文件注入，yaml或yml类型不适用。","link":"/2020/04/08/SpringBoot/%E5%AF%B9%E6%AF%94Spring%E5%92%8CSpring%20Boot%E4%B8%ADproperties%E6%96%87%E4%BB%B6%E4%B8%8D%E5%90%8C%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F/"},{"title":"创建SpringBoot项目的三种姿势，你掌握几个？","text":"在传统的SSM项目中，我们前期工作总是大量操作XML配置文件，而且有时候项目出现问题，经常找不到原因出在哪里，可能是代码逻辑问题、或者是XML配置不正确，给我们开发人员带来不少困扰，SpringBoot的出现极大的减少了开发人员的大量工作，如： Create stand-alone Spring applications创建一个独立启动的Spring应用 Embed Tomcat, Jetty or Undertow directly (no need to deploy WAR files)内嵌Tomcat，Jetty或Undertow（无需部署WAR文件） Provide opinionated ‘starter’ dependencies to simplify your build configuration使用官方提供‘starter’依赖可以减少你项目构建所需配置 Automatically configure Spring and 3rd party libraries whenever possible尽可能自动配置Spring和第三方库 Provide production-ready features such as metrics, health checks, and externalized configuration提供可用于生产的功能，例如指标，运行状况检查和外部化配置 Absolutely no code generation and no requirement for XML configuration完全没有代码生成，也不需要XML配置 以上就是对于SpringBoot的简单了解，好不好用，用了才知道。接下来介绍创建SpringBoot项目的三种方式 1. 使用官方提供的构建方式1.1 点击进入到官方的Spring Initializr,如下界面1.2 填写所需信息后，点击GENERATE, 此时就会下载一个压缩文件到本地，我们将该文件解压缩，然后用IDE打开即可1.3 解压缩完成后，打开IDE工具，这里使用的是IntelliJ IDEA,点击Open,选择解压后文件打开，如下：1.4打开成功后，我们的第一个SpringBoot项目就创建完成了。 2. 使用IDE(IntelliJ IDEA)构建2.1 我们打开IntelliJ IDEA,点击Create New Project2.2 选择Spring Initializr,选择SDK,构建方式使用官方提供方式，选择完成后点击Next2.3 填写方式同官方方式,填写完成后，点击Next：2.4 选择所需依赖，然后Next，最后Finish,项目就创建成功了 3. 通过改造一个Maven项目3.1 我们打开IntelliJ IDEA,点击Create New Project，选择Maven，然后点击Next3.2 填写GroupId等信息，点击Next，最后Finish3.3 上面步骤结束后，Maven项目创建成功，接下来我们进行改造打开pom.xml文件，添加如下配置到&amp;lt;project&amp;gt;&amp;lt;/project&amp;gt;节点下 12345678910111213141516171819&lt;parent&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt; &lt;version&gt;2.2.6.RELEASE&lt;/version&gt;&lt;/parent&gt;&lt;dependencies&gt; &lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;/dependency&gt;&lt;/dependencies&gt;&lt;build&gt; &lt;plugins&gt; &lt;plugin&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt; &lt;/plugin&gt; &lt;/plugins&gt;&lt;/build&gt; 添加完成后我们还需添加一个启动类，如下： 123456@SpringBootApplicationpublic class Springboot3Application { public static void main(String[] args) { SpringApplication.run(Springboot3Application.class,args); }} 至此，Maven方式就创建完成了。","link":"/2020/04/07/SpringBoot/%E5%88%9B%E5%BB%BASpringBoot%E9%A1%B9%E7%9B%AE%E7%9A%84%E4%B8%89%E7%A7%8D%E5%A7%BF%E5%8A%BF%EF%BC%8C%E4%BD%A0%E9%83%BD%E7%9F%A5%E9%81%93%E5%90%97/"},{"title":"SpringBoot中整合fastjson，自定义jackson、gson","text":"如今炒的火热的前后端分离项目，大多数开发人员选择RESTful设计风格，Java Web 人员经常要设计 RESTful API，这种设计通常使用 json 数据进行交互。那么前端传入的 json 数据如何序列化成 Java 对象，后端返回的结果又如何将 Java 对象解析成 json 格式数据返回给前端，在整个解析过程，HttpMessageConverter 起到了重要作用，各大公司实现了自己的HttpMessageConverter ，如： jackson的MappingJackson2HttpMessageConverter; gson的GsonHttpMessageConverter; fastjson的FastJsonHttpMessageConverter等等。 1. 自定义jacksonspring-boot-stater-web依赖的json解析是jackson,同时也为我们进行了jackson的一系列自动化配置，这样我们不需要导入其他json依赖，就可以直接使用，其中起到关键作用的是MappingJackson2HttpMessageConverter;123456789@Bean//如果我们自己提供MappingJackson2HttpMessageConverter则不使用Springboot提供的@ConditionalOnMissingBean(value = MappingJackson2HttpMessageConverter.class, ignoredType = { \"org.springframework.hateoas.server.mvc.TypeConstrainedMappingJackson2HttpMessageConverter\", \"org.springframework.data.rest.webmvc.alps.AlpsJsonHttpMessageConverter\" })MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter(ObjectMapper objectMapper) { return new MappingJackson2HttpMessageConverter(objectMapper);} @ConditionalOnMissingBean(value = MappingJackson2HttpMessageConverter.class,..)注解也告诉我们，如果没有找到自定义的MappingJackson2HttpMessageConverter，将使用下面springboot提供的。如果我们要自定义jackson只需重新定义MappingJackson2HttpMessageConverter，那么springboot提供的将不会生效，自定义方式如下：1234567891011121314@Configurationpublic class WebMvcConfig { @Bean MappingJackson2HttpMessageConverter mappingJackson2HttpMessageConverter(){ MappingJackson2HttpMessageConverter converter = new MappingJackson2HttpMessageConverter(); ObjectMapper objectMapper = new ObjectMapper(); //自定义json日期格式 objectMapper.setDateFormat(new SimpleDateFormat(\"yyyy-MM-dd\")); //其他自定义配置 converter.setObjectMapper(objectMapper); return converter; }} 2. 自定义Gson由于spring-boot-stater-web已引入jackson，如果要使用gson需将jackson包排除掉，然后引入gson依赖即可，在pom.xml中添加如下配置：12345678910111213141516&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;exclusions&gt; &lt;!-- 移除默认的spring-boot-starter-json依赖 --&gt; &lt;exclusion&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-json&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt;&lt;/dependency&gt;&lt;!-- 引入gson依赖 --&gt;&lt;dependency&gt; &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt; &lt;artifactId&gt;gson&lt;/artifactId&gt;&lt;/dependency&gt; 此时我们发现gson依赖并不需要填写版本号，那是因为，springboot也为gson做了一套默认配置，同时管理gson版本，具体可查看spring-boot-dependencies下的pom依赖；同样我们如果要自定义gson配置，只需重新定义GsonHttpMessageConverter即可：1234567891011@BeanGsonHttpMessageConverter gsonHttpMessageConverter(){ GsonHttpMessageConverter converter = new GsonHttpMessageConverter(); GsonBuilder gsonBuilder = new GsonBuilder(); //使用GsonBuilder配置日期格式 gsonBuilder.setDateFormat(\"yyyy-MM-dd\"); //其他配置 converter.setGson(gsonBuilder.create()); return converter;} 3. 整合fastjson同样将jackson包排除掉，然后引入fastjson依赖1234567891011121314151617&lt;dependency&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt; &lt;exclusions&gt; &lt;!-- 移除默认的spring-boot-starter-json依赖 --&gt; &lt;exclusion&gt; &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt; &lt;artifactId&gt;spring-boot-starter-json&lt;/artifactId&gt; &lt;/exclusion&gt; &lt;/exclusions&gt;&lt;/dependency&gt;&lt;!-- 引入fastjson依赖 --&gt;&lt;dependency&gt; &lt;groupId&gt;com.alibaba&lt;/groupId&gt; &lt;artifactId&gt;fastjson&lt;/artifactId&gt; &lt;version&gt;1.2.58&lt;/version&gt;&lt;/dependency&gt; fastjson与jackson和gson略有不同，springboot没有提供fastjson的自动化配置，所以，就需要我们手动提供fastjson配置，如下：12345678910@BeanFastJsonHttpMessageConverter fastJsonHttpMessageConverter(){ FastJsonHttpMessageConverter converter = new FastJsonHttpMessageConverter(); FastJsonConfig config = new FastJsonConfig(); //配置日期格式 config.setDateFormat(\"yyyy-MM-dd\"); //其他配置 converter.setFastJsonConfig(config); return converter;}","link":"/2020/04/09/SpringBoot/SpringBoot%E4%B8%AD%E6%95%B4%E5%90%88fastjson%EF%BC%8C%E8%87%AA%E5%AE%9A%E4%B9%89jackson%E3%80%81gson/"}],"tags":[{"name":"图床","slug":"图床","link":"/tags/%E5%9B%BE%E5%BA%8A/"},{"name":"工具","slug":"工具","link":"/tags/%E5%B7%A5%E5%85%B7/"},{"name":"tools","slug":"tools","link":"/tags/tools/"},{"name":"SpringBoot","slug":"SpringBoot","link":"/tags/SpringBoot/"},{"name":"Spring","slug":"Spring","link":"/tags/Spring/"},{"name":"properties","slug":"properties","link":"/tags/properties/"},{"name":"Maven","slug":"Maven","link":"/tags/Maven/"},{"name":"IntelliJ IDEA","slug":"IntelliJ-IDEA","link":"/tags/IntelliJ-IDEA/"},{"name":"IDE","slug":"IDE","link":"/tags/IDE/"},{"name":"json","slug":"json","link":"/tags/json/"}],"categories":[{"name":"推荐工具","slug":"推荐工具","link":"/categories/%E6%8E%A8%E8%8D%90%E5%B7%A5%E5%85%B7/"},{"name":"springboot","slug":"springboot","link":"/categories/springboot/"}]}